from multiprocessing import Pool

class Entry(object):
	def __init__(self, name, version):
		self.name = name
		self.version = version
        
	def __repr__(self):
		return '%s %s' % (self.name, self.version)

class PIPEntry(Entry):
  def __init__(self, str):
    str = str.split('==')
    name = str[0]
    version = str[1]
    Entry.__init__(self, name, version)

def processPIP(lst):
    p = Pool(5)
    return p.map(PIPEntry, lst)

class WinEntry(Entry):
  def __init__(self, str):
    name = str
    version = str
    Entry.__init__(self, name, version)

def processWindows(lst):
    p = Pool(5)
    return p.map(WinEntry, lst)

class LinuxEntry(Entry):
  def __init__(self, str):
    str = str.split()
    name = str[1]
    version = str[2]
    Entry.__init__(self, name, version)

def processLinux(lst):
    p = Pool(5)
    str = lst[0]
    str = str.split()
    name = str[1]
    version = str[2]
    print(str, name, version)
    return p.map(LinuxEntry, lst)
